package lab_10;

import java.util.ArrayList;
import java.util.Iterator;

public class DataProcessor {
    

    static int findAmountOfStudents(Institute institute) {
        int countStudents = 0;

        for (Iterator<Faculty> i = institute.faculties.iterator(); i.hasNext();) {
            Faculty f = i.next();
            countStudents += f.students.size();
        }

        System.out.println("Amount of students: " + countStudents);
        return countStudents;
    }

    static ArrayList<Faculty> findTheBiggestFaculty(Institute institute) {
        int countStudents = 0;
        ArrayList<Faculty> theBiggestFaculties = new ArrayList<>();

        for (Iterator i = institute.faculties.iterator(); i.hasNext();) {
            Faculty f = (Faculty) i.next();
            if (f.students.size() > countStudents) {
                countStudents = f.students.size();
                theBiggestFaculties = new ArrayList<>();
                theBiggestFaculties.add(f);
            } else if (f.students.size() == countStudents) {
                theBiggestFaculties.add(f);
            }
        }

        if (theBiggestFaculties.size() == 1) {
            System.out.print("The Biggest Faculty is " + theBiggestFaculties.get(0).getName() + ", ");
        } else {
            System.out.print("The Biggest Faculties are ");
            for (int i = 0; i < theBiggestFaculties.size(); i++) {
                System.out.print(theBiggestFaculties.get(i).getName() + ", ");
            }
        }
        System.out.println("Amount of students = " + countStudents);
        return theBiggestFaculties;

    }

    static ArrayList<Student> getListOfExcellentStudents(Institute institute) {
        ArrayList<Student> list = new ArrayList<>();
        for (Faculty faculty : institute.faculties) {
            for (Student student : faculty.students) {
                if (student.getAverageGrade() >= 95) {
                    list.add(student);
                }
            }
        }
        System.out.println("The list of excellent students: " + list);
        return list;
    }
}
